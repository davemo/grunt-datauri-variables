{
  "name": "jasmine-before-all",
  "version": "0.0.2",
  "description": "Adds a done-friendly beforeAll setup to jasmine",
  "homepage": "https://github.com/testdouble/jasmine-before-all",
  "author": {
    "name": "Justin Searls"
  },
  "main": "main.js",
  "dependencies": {
    "coffee-script": "~ 1.6.3"
  },
  "devDependencies": {
    "lineman": ">=0.11.0"
  },
  "keywords": [
    "jasmine",
    "bdd"
  ],
  "bugs": {
    "url": "https://github.com/testdouble/jasmine-before-all/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/testdouble/jasmine-before-all.git"
  },
  "licenses": [
    {
      "name": "Apache License 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  ],
  "readme": "# jasmine-before-all\n\n[![Build Status](https://travis-ci.org/testdouble/jasmine-before-all.png?branch=master)](https://travis-ci.org/testdouble/jasmine-before-all)\n\njasmine-before-all is a standalone plugin that you can load *after* jasmine that adds a global `beforeAll` function that calls `beforeEach` at most one time per callback definition and most importantly plays nicely with `done` mechanisms like those found in [minijasminenode](https://github.com/juliemr/minijasminenode).\n\nUsing a `beforeAll` is typically a *bad idea* for unit tests, but if you're using Jasmine for integration tests, it'll probably come in handy as soon as your setup becomes expensive.\n\n**[Download the latest version here](https://github.com/testdouble/jasmine-before-all/releases)**.\n\n# examples\n\nDoes what it says on the tin. This would pass, for instance:\n\n```coffeescript\ndescribe 'intentional pollution', ->\n  foo = 0\n  beforeAll -> foo += 1\n\n  context '1', ->\n    Then -> foo == 1\n\n  context '2', ->\n    Then -> foo == 1\n\n  context '3', ->\n    Then -> foo == 1\n```\n\nAnd if your test runner includes a \"done\" callback (or you've included one as a helper), this should also work:\n\n``` coffeescript\ndescribe '(asynchronous) intentional pollution', ->\n  bar = 3\n  beforeAll (done) ->\n    setTimeout ->\n      bar -= 1\n      done()\n    , 100\n\n  context '1', ->\n    Then -> bar == 2\n\n  context '2', ->\n    Then -> bar == 2\n\n  context '3', ->\n    Then -> bar == 2\n```\n",
  "readmeFilename": "README.md",
  "_id": "jasmine-before-all@0.0.2",
  "_from": "jasmine-before-all@~0.0.2"
}
